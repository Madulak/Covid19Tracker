{"version":3,"sources":["components/Covid19/Covid19.module.css","components/Graph/Graph.js","components/UI/Spinner/Spinner.js","components/Covid19/Covid19.js","components/Map/Map.js","components/Casebycountry/Casebycountry.js","App.js","serviceWorker.js","index.js","App.module.css","components/Casebycountry/Casebycountry.module.css","components/Map/Map.module.css","components/Graph/Graph.module.css","components/UI/Spinner/Spinner.module.css"],"names":["module","exports","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","numeral","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","lastDataPoint","casesType","chartData","date","cases","newDataPoint","x","y","push","LineGraph","useState","setData","useEffect","a","fetch","then","response","json","console","log","fetchData","className","classes","Graph","length","datasets","backgroundColor","borderColor","Spinner","Loader","Covid19","props","country","setCountry","dropdown","Heading","onChange","event","target","Dropdown","countries","map","ig","key","Stats","Cases","loading","dataPoint","todayCases","Recovered","todayRecovered","recovered","Deaths","todayDeaths","deaths","Maps","Map","MapContainer","style","height","borderRadius","center","mapCenter","zoom","mapZoom","TileLayer","url","attribution","Circle","lat","countryInfo","lng","long","fillOpacity","color","fillColor","Math","sqrt","Popup","width","src","flag","alt","Countries","GraphStyle","tableData","App","React","memo","setCountries","setLoading","loadingGraph","setLoadingGraph","worlddata","setWorlddata","countrydata","setMapCenter","setMapZoom","document","title","urlWorld","urlCountry","urlCountries","Axios","get","catch","err","First","id","Second","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.c7888c0f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Covid19\":\"Covid19_Covid19__2S22l\",\"Heading\":\"Covid19_Heading__3s5_M\",\"Dropdown\":\"Covid19_Dropdown__qjky7\",\"Stats\":\"Covid19_Stats__2jk6-\",\"Cases\":\"Covid19_Cases__1Bfwr\",\"Recovered\":\"Covid19_Recovered__3CDUQ\",\"Deaths\":\"Covid19_Deaths__3F8Rs\"};","import React, { useState, useEffect, Fragment } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\nimport classes from './Graph.module.css';\n\nconst options = {\n  legend: {\n    display: false,\n  },\n  elements: {\n    point: {\n      radius: 0,\n    },\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      },\n    },\n  },\n  scales: {\n    xAxes: [\n      {\n        type: \"time\",\n        time: {\n          format: \"MM/DD/YY\",\n          tooltipFormat: \"ll\",\n        },\n      },\n    ],\n    yAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n        ticks: {\n          // Include a dollar sign in the ticks\n          callback: function (value, index, values) {\n            return numeral(value).format(\"0a\");\n          },\n        },\n      },\n    ],\n  },\n};\n\nconst buildChartData = (data, casesType = 'cases') => {\n  let chartData = [];\n  let lastDataPoint;\n  for (let date in data.cases) {\n    if (lastDataPoint) {\n      let newDataPoint = {\n        x: date,\n        y: data[casesType][date] - lastDataPoint,\n      };\n      chartData.push(newDataPoint);\n    }\n    lastDataPoint = data[casesType][date];\n  }\n  return chartData;\n};\n\nfunction LineGraph({ casesType }) {\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          let chartData = buildChartData(data, casesType);\n          setData(chartData);\n          console.log(chartData);\n          // buildChart(chartData);\n        });\n    };\n\n    fetchData();\n  }, [casesType]);\n\n  return (\n    <Fragment><h3>World Wide Stats Graph</h3>\n    <div className={classes.Graph}>\n      {data?.length > 0 && (\n        <Line \n          data={{\n            datasets: [\n              {\n                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n                borderColor: \"#CC1034\",\n                data: data,\n              },\n            ],\n          }}\n          options={options}\n        />\n      )}\n    </div></Fragment>\n  );\n}\n\nexport default LineGraph;\n\n\n// import React, { Fragment, useState, useEffect } from 'react';\n// import classes from './Graph.module.css';\n\n// import Spinner from '../UI/Spinner/Spinner';\n// import Axios from 'axios';\n// import { Line } from 'react-chartjs-2';\n// import { numeral } from 'numeral';\n\n\n// const Graph = (props) => {\n\n//     const [country, setCountry] = useState('');\n//     const [data, setData] = useState({});\n//     const [graphData, setGraphData] = useState();\n\n//     let urlCountry = `https://disease.sh/v3/covid-19/historical/${country}?lastdays=120`;\n//     let urlWorld = `https://disease.sh/v3/covid-19/historical/all?lastdays=130`;\n\n//     useEffect(() => {\n//         Axios.get(urlWorld)\n//             .then(response => {\n//                 console.log(response.data.cases);\n//                 setGraphData(response.data.cases)\n//                 let chartData = buildChartData(graphData)\n//                 setData(chartData);\n//                 console.log(data);\n//             })\n//             .catch(err => {\n//                 console.log(err);\n//             });\n//     },[])\n\n//     const buildChartData = data => {\n//         const chartData = [];\n//         let lastDataPoint;\n//         for (let date in data) {\n//             let newDataPoint = {\n//                 x: date,\n//                 y: data[date]\n//             }\n//             chartData.push(newDataPoint);\n//         }\n//         return chartData;\n\n//     }\n\n    \n// const options = {\n//     legend: {\n//         display: false,\n//     },\n//     elements: {\n//         point: {\n//             radius: 0\n//         },\n//     },\n//     maintainAspectRatio: false,\n//     tooltips: {\n//         mode: 'index',\n//         intersect: false,\n//         callbacks: {\n//             label: function (tooltipItem, data) {\n//                 return numeral(tooltipItem.value).format('+0,0');\n//             }\n//         }\n//     },\n//     scales: {\n//         xAxes: [\n//             {\n//                 type: 'time',\n//                 time: {\n//                     format: 'dd/mm/yy',\n//                     tooltipFormat: '11'\n//                 },\n                \n//             }\n//         ],\n//         yAxes: [\n//             {\n//                 gridLines: {\n//                     display: false,\n//                 },\n//                 // ticks: {\n//                 //     callback: function(value, index, values) {\n//                 //         return numeral(value).format('0a');\n//                 //     }\n//                 // }\n//             }\n//         ]\n//     }\n// }\n\n//     return (\n//         <div className={classes.Graph}>\n//             <div className={classes.Countries}>\n                \n                \n//                 <h3>Countries By Case</h3>\n//                 <div className={classes.GraphStyle}>\n//                 {props.loading === false ? <Fragment>{props.tableData ? <Fragment>{props.tableData.map(ig => (\n                    \n//                         <tr key={ig.country}>\n//                             <td>{ig.country}</td>\n//                             <td><strong>{ig.cases}</strong></td>\n//                         </tr>\n                    \n//                 ))}</Fragment> : ''}</Fragment> : <Spinner />}\n//                 </div>\n               \n//             </div>\n\n//             <div className={classes.GraphStats}>\n//                  <h3>Here will fit a Graph</h3>\n//                  {data ? <Fragment><Line \n//                     options={options}\n//                     data={{\n//                         datasets: [\n//                             {\n//                                 label: '# Cases',\n//                                 backgroundColor: 'rgba(204,16,52,0.5)',\n//                                 borderColor: '#CC1034',\n//                                 data: data\n//                             }\n//                         ]\n//                     }}\n//                  /></Fragment>: ''}\n\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default Graph;","import React from 'react';\nimport classes from './Spinner.module.css';\n\nconst Spinner = () => {\n\n    return (\n        <div className={classes.Loader}>\n\n        </div>\n    );\n}\n\nexport default Spinner;","import React, { Fragment, useState, useEffect } from 'react';\nimport classes from './Covid19.module.css';\n\nimport Spinner from '../UI/Spinner/Spinner';\n\nimport numeral from 'numeral';\n\nconst Covid19 = (props) => {\n\n    const [country, setCountry] = useState('WorldWide');\n\n    const onChangeHandler = (event) => {\n        setCountry(event.target.value);\n         \n    }\n\n    useEffect(() => {\n        props.dropdown(country);\n    },[country])\n\n    \n\n    console.log(country)\n\n    return (\n        <div className={classes.Covid19}>\n            <div className={classes.Heading}>\n                <h1>Covid 19 Tracker</h1>\n                <select value={country} onChange={onChangeHandler} className={classes.Dropdown}>\n                    <option value=\"WorldWide\">WorldWide</option>\n                    {props.countries.map(ig => (\n                        <option key={ig.country} value={ig.country}>{ig.country}</option>\n                    ))}\n                </select>\n            </div>\n\n            <div className={classes.Stats}>\n                <div className={classes.Cases}>\n                    {props.loading ===false ? <Fragment><h3>Corona Virus Cases</h3>\n                    <h4>Today Cases: {numeral(props.dataPoint.todayCases).format('0,0')}</h4>\n                    <h4>Total Cases: {numeral(props.dataPoint.cases).format('0,0')}</h4></Fragment>: <Spinner />}\n                </div>\n\n                <div className={classes.Recovered}>\n                    {props.loading ===false ? <Fragment><h3>Recovered</h3>\n                    <h4>Today Recovered: {numeral(props.dataPoint.todayRecovered).format('0,0')}</h4>\n                    <h4>Total Recovered: {numeral(props.dataPoint.recovered).format('0,0')}</h4></Fragment>: <Spinner />}\n                </div>\n\n                <div className={classes.Deaths}>\n                    {props.loading ===false ? <Fragment><h3>Deaths</h3>\n                    <h4>Today Deaths: {numeral(props.dataPoint.todayDeaths).format('0,0')}</h4>\n                    <h4>Total Deaths: {numeral(props.dataPoint.deaths).format('0,0')}</h4></Fragment>: <Spinner />}\n                </div>\n            </div>\n            \n        </div>\n    );\n}\n\nexport default Covid19;","import React from 'react';\nimport classes from './Map.module.css';\n\nimport { Map as LeafletMap, TileLayer, Circle, Popup } from 'react-leaflet';\nimport numeral from 'numeral';\n\nconst Maps = (props) => {\n\n    return (\n        <div className={classes.Map}>\n            <div className={classes.MapContainer}>\n                <LeafletMap style={{height: '100%', borderRadius: '10px', }} center={props.mapCenter} zoom={props.mapZoom}>\n                <TileLayer \n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    />\n                    {props.countries.map(ig => (\n                        <Circle key={ig.country} center={{lat: ig.countryInfo.lat, lng: ig.countryInfo.long}} \n                            fillOpacity={0.4}\n                            color={'red'}\n                            fillColor={'pink'}\n                            radius={Math.sqrt(ig.cases)* 800}\n                        >\n                            <Popup >\n                                <img style={{width: '100%'}} src={ig.countryInfo.flag} alt={ig.country} />\n                                <h4>{ig.country}</h4>\n                                <h4>Cases: {numeral(ig.cases).format(0,0)}</h4>\n                                <h4>Recovered: {numeral(ig.recovered).format(0,0)}</h4>\n                                <h4>Death: {numeral(ig.deaths).format(0,0)}</h4>\n                            </Popup>\n                        </Circle>\n                    ))}\n                </LeafletMap>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Maps;","import React, { Fragment } from 'react';\nimport classes from './Casebycountry.module.css';\n\nimport Spinner from '../UI/Spinner/Spinner';\n\n\nconst Graph = (props) => {\n\n    return (\n        <div className={classes.Graph}>\n            <div className={classes.Countries}>\n                \n                \n                <h3>Countries By Case</h3>\n                <div className={classes.GraphStyle}>\n                {props.loading === false ? <Fragment>{props.tableData ? <Fragment>{props.tableData.map(ig => (\n                    \n                        <tr key={ig.country}>\n                            <td>{ig.country}</td>\n                            <td><strong>{ig.cases}</strong></td>\n                        </tr>\n                    \n                ))}</Fragment> : ''}</Fragment> : <Spinner />}\n                </div>\n               \n            </div>\n\n            \n        </div>\n    );\n}\n\nexport default Graph;","import React, { useState, useEffect } from 'react';\nimport classes from './App.module.css';\n\nimport Graph from './components/Graph/Graph';\nimport Covid19 from './components/Covid19/Covid19';\nimport Map from './components/Map/Map';\nimport Countrybycase from './components/Casebycountry/Casebycountry';\n\nimport Axios from 'axios';\nimport \"leaflet/dist/leaflet.css\";\n\nconst App = React.memo(() => {\n\n  const [country, setCountry] = useState('WorldWide');\n  const [isWorld, setIsworld] = useState(true);\n  const [countries, setCountries] = useState([]);\n  \n  const [loading, setLoading] = useState(false);\n  const [loadingGraph, setLoadingGraph] = useState(false);\n  \n\n  const [worlddata, setWorlddata] = useState();\n  const [countrydata, setCountrydata] = useState('');\n\n  const [mapCenter, setMapCenter] = useState({lat: -27.80746, lng: 10.4796})\n  const [mapZoom, setMapZoom] = useState(2.6);\n\n  document.title = \"Covid19 Tracker\";\n\n  let urlWorld = 'https://disease.sh/v3/covid-19/all';\n  let urlCountry = `https://disease.sh/v3/covid-19/countries/${country}?strict=false`;\n  let urlCountries = 'https://disease.sh/v3/covid-19/countries?sort=cases';\n\n  useEffect(() => {\n    if(country === 'WorldWide') {\n      setLoading(true);\n      Axios.get(urlWorld)\n        .then(response => {\n          console.log(response);\n          setWorlddata(response.data);\n          setMapCenter({lat: -27.80746, lng: 10.4796})\n          setMapZoom(2.6);\n          setLoading(false);\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    } \n    if(country !== '' && country !== 'WorldWide') {\n      setLoading(true);\n      Axios.get(urlCountry)\n        .then(response => {\n          console.log(response);\n          setWorlddata(response.data);\n          setMapCenter({lat: response.data.countryInfo.lat, lng: response.data.countryInfo.long})\n          setMapZoom(4);\n          setLoading(false);\n        })\n        .catch(err => {\n          console.log(err);\n        })\n    }\n\n  },[country, urlWorld, mapZoom, mapCenter])\n\n  \n\n  useEffect(() => {\n    setLoadingGraph(true);\n    Axios.get(urlCountries)\n      .then(response => {\n        console.log(response.data);\n        setCountries(response.data);\n        setLoadingGraph(false);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  },[urlCountries])\n\n  const dropdown = (id) => {\n    setCountry(id);\n  }\n\n  console.log(country);\n\n  return (\n    <div className={classes.App}>\n      <div className={classes.First}>\n       <Covid19 dropdown={dropdown} loading={loading} countries={countries} dataPoint={worlddata ? worlddata : countrydata} /> \n        <Map  countries={countries} loading={loading} mapZoom={mapZoom} mapCenter={mapCenter} />\n      </div>\n\n      <div className={classes.Second}>\n          <Countrybycase loading={loadingGraph} tableData={countries}/>\n          <Graph   />\n      </div>\n        \n    </div>\n  );\n})\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"First\":\"App_First__2STFH\",\"Second\":\"App_Second__36Vcm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Graph\":\"Casebycountry_Graph__10qsL\",\"Countries\":\"Casebycountry_Countries__E6qwn\",\"GraphStyle\":\"Casebycountry_GraphStyle__1yDf0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Map\":\"Map_Map__lBUCh\",\"MapContainer\":\"Map_MapContainer__DjkX8\",\"leaflet-container\":\"Map_leaflet-container__3igJ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Graph\":\"Graph_Graph__sgfkm\",\"Countries\":\"Graph_Countries__2dreB\",\"GraphStyle\":\"Graph_GraphStyle__26rkp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load4\":\"Spinner_load4__dJ24G\"};"],"sourceRoot":""}